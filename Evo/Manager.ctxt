#BlueJ class context
comment0.target=Manager
comment0.text=\n\ Write\ a\ description\ of\ JavaFX\ class\ View\ here.\n\n\ @author\ Aaron\ Fink\n\ @version\ September\ 24,\ 2019\n
comment1.params=
comment1.target=Manager()
comment1.text=\n\ JavaFX\ calls\ this\ constructor\ when\ we\ press\ "Run\ JavaFX\ Application"\ in\ BlueJ.\n\ (probably\ because\ it\ is\ the\ default.)\n\ We\ have\ no\ idea\ how\ to\ run\ this\ thing\ from\ Terminal.\n
comment2.params=foodSpread\ foodQuantity
comment2.target=Manager(double,\ double)
comment2.text=\ \n\ We\ only\ manually\ create\ a\ Manager\ (using\ BlueJ\ interface)\n\ when\ we\ want\ to\ run\ without\ visuals.\ At\ which\ point\ we\ call\ one\ of\ these\n\ Manager\ constructors.\n\ \n\ This\ constructor\ is\ not\ called\ from\ anywhere\ in\ our\ code.\n\ JavaFX\ calls\ the\ other\ constructor\ (above).\n
comment3.params=stage
comment3.target=void\ start(javafx.stage.Stage)
comment3.text=\n\ The\ start\ method\ is\ the\ main\ entry\ point\ for\ every\ JavaFX\ application.\ \n\ It\ is\ called\ after\ the\ init()\ method\ has\ returned\ and\ after\ \n\ the\ system\ is\ ready\ for\ the\ application\ to\ begin\ running.\n\n\ @param\ \ stage\ the\ primary\ stage\ for\ this\ application.\n
comment4.params=framesToSimulate
comment4.target=void\ startNoVisuals(int)
comment4.text=\n\ Run\ the\ simulation\ without\ taking\ the\ time\ for\ visuals.\n\ This\ function\ has\ the\ significant\ drawback\ that\ while\ it\n\ is\ simulating\ no\ other\ code\ can\ execute.\n\ (What\ other\ code\ would\ want\ to\ execute\ anyway?\ We\ don't\ have\ a\ GUI\ do\ we?)\n\ See\ startNoVisualsThreaded(\ )\ below\n\ @param\ framesToSimulate\ the\ number\ of\ frames\ of\ simulation.\n\ Because\ of\ how\ the\ internal\ loop\ works,\ any\ negative\ number\ will\ \n\ lead\ to\ an\ infinite\ simulation.\n
comment5.params=framesToSimulate
comment5.target=void\ startNoVisualsThreaded(int)
comment5.text=\n\ Run\ the\ simulation\ without\ taking\ the\ time\ for\ visuals.\n\ This\ function\ has\ the\ significant\ improvement\ that\ \n\ while\ it\ is\ simulating,\ other\ code\ can\ execute.\n\ See\ startNoVisuals(\ )\ above\ which\ has\ busy\ loop\ \n\ (fast\ but\ greedy\ re\ threads\ (what\ other\ threads???))\n\ \n\ @param\ framesToSimulate\ the\ number\ of\ frames\ of\ simulation.\n\ Because\ of\ how\ the\ internal\ loop\ works,\ any\ negative\ number\ \n\ will\ lead\ to\ an\ infinite\ simulation.\n\ \n\ BEWARE\:\ Using\ multiple\ threads\ will\ cause\ the\ order\ that\ random\ numbers\ are\ accessed\ to\n\ be\ unpredictable,\ which\ will\ make\ the\ random\ seed\ not\ guarantee\ fixed\ results.\n
comment6.params=agents
comment6.target=void\ displayWorld(java.util.ArrayList)
comment7.params=
comment7.target=void\ updateWorld()
comment8.params=
comment8.target=void\ outputData()
numComments=9
